server {
    listen 80;

# http를 사용하는 경우 주석 해제
#    location / {
#        proxy_pass http://solid-connect-server:8080;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }

    location / {
            return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;

    ssl_certificate /etc/letsencrypt/live/api.solid-connect.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.solid-connect.net/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on; # 클라이언트 보다 서버의 암호화 알고리즘을 우선하도록 설정
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";
    ssl_session_cache shared:SSL:10m; # SSL 세션 캐시 설정
    ssl_session_timeout 10m;
    ssl_stapling on; # OCSP 스테이플링 활성화
    ssl_stapling_verify on;

    location / {
        proxy_pass http://solid-connect-server:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~ /.well-known/acme-challenge { # 인증서 갱신에 필요한 경로 설정
            allow all;
        }
}